[
  {
    "name": "Web Development: Comprehensive Guide to HTML, CSS, and JavaScript",
    "title": "Web Development: Comprehensive Guide to HTML, CSS, and JavaScript",
    "description": "Learn web development from the basics of HTML, CSS to building interactive websites with JavaScript.",
    "meta-title": "Web Development Course | Comprehensive Guide to HTML, CSS, and JavaScript",
    "meta-description": "Join our comprehensive web development course and become proficient in creating dynamic websites using HTML, CSS, and JavaScript.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1690368005/images/h63ykqvog4i4uht9xzg8.png",
    "slug": "html-css-js",
    "categories": [
      "Web Development",
      "HTML",
      "CSS",
      "JavaScript"
    ],
    "tags": [
      "HTML",
      "CSS",
      "JavaScript",
      "Front-end Development",
      "Web Design"
    ],
    "learning_outcomes": [
      "Understand the core concepts of HTML, CSS, and JavaScript",
      "Create static web pages using HTML and CSS",
      "Implement responsive web design with CSS media queries",
      "Add interactivity and dynamic content using JavaScript",
      "Build interactive web applications and projects",
      "Work with modern front-end frameworks and libraries",
      "Optimize websites for performance and accessibility",
      "Deploy websites to hosting platforms"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "course_content": [
      {
        "topicName": "HTML Fundamentals",
        "subtopics": [
          "Introduction to HTML",
          "HTML Document Structure",
          "HTML Elements and Tags",
          "Text Formatting and Semantic Elements",
          "Hyperlinks and Navigation",
          "Lists (Ordered, Unordered)",
          "Tables and Forms",
          "Images and Multimedia",
          "HTML5 Semantic Elements",
          "HTML Forms and Form Validation",
          "Audio and Video Embedding",
          "Meta Tags and SEO",
          "Responsive Images and srcset",
          "HTML Accessibility (ARIA roles)"
        ]
      },
      {
        "topicName": "CSS Styling",
        "subtopics": [
          "Introduction to CSS",
          "CSS Selectors and Properties",
          "Box Model (Margin, Padding, Border)",
          "Styling Text and Fonts",
          "Working with Colors and Backgrounds",
          "CSS Layout Techniques",
          "Flexbox and Grid Layout",
          "Media Queries and Responsive Design",
          "CSS Transitions and Animations",
          "CSS Transformations",
          "CSS Variables (Custom Properties)",
          "CSS Flexibility with calc()",
          "Styling Forms and Form Validation",
          "CSS Best Practices and Code Organization"
        ]
      },
      {
        "topicName": "JavaScript Basics",
        "subtopics": [
          "Introduction to JavaScript",
          "Variables and Data Types",
          "Conditional Statements (if, else)",
          "Loops (for, while, do...while)",
          "Functions and Scope",
          "Arrays and Objects",
          "DOM Manipulation",
          "Events and Event Handling",
          "Working with Forms and User Input",
          "Working with Dates and Times",
          "Handling Errors and Debugging",
          "Using Browser APIs (localStorage, sessionStorage)",
          "JSON Data Manipulation",
          "Async Programming with Callbacks and Promises"
        ]
      },
      {
        "topicName": "Advanced JavaScript",
        "subtopics": [
          "Closures and Prototypes",
          "Asynchronous JavaScript (Async/Await)",
          "Working with JSON and Fetch API",
          "ES6+ Features (Arrow Functions, Classes)",
          "Client-Side Storage (Local Storage, Session Storage)",
          "Working with Third-Party APIs (e.g., Google Maps)",
          "Manipulating the DOM with Shadow DOM",
          "Web Workers for Multithreading",
          "Interacting with Canvas for Graphics",
          "Implementing Drag and Drop",
          "Using WebSockets for Real-Time Communication",
          "Server-Side Communication with AJAX",
          "JavaScript Design Patterns"
        ]
      },
      {
        "topicName": "Front-End Frameworks",
        "subtopics": [
          "Introduction to Front-End Frameworks (e.g., React, Vue.js)",
          "Creating Components and Reusable UI Elements",
          "State Management with React Hooks or Vue.js Composition API",
          "Routing and Navigation in SPA",
          "Form Handling and Validation with Frameworks",
          "Working with HTTP APIs",
          "Optimizing Performance with Code Splitting",
          "Server-Side Rendering (SSR) and Universal Applications",
          "Working with UI Frameworks (e.g., Material UI, Bootstrap)"
        ]
      },
      {
        "topicName": "Optimizing and Deploying",
        "subtopics": [
          "Website Performance Optimization Techniques",
          "Web Accessibility Best Practices",
          "Progressive Web Apps (PWAs)",
          "Testing and Debugging Web Applications",
          "Version Control with Git",
          "Continuous Integration and Deployment (CI/CD)",
          "Optimizing Images and Assets",
          "Caching and Content Delivery Networks (CDNs)",
          "Using Webpack for Bundling and Minification",
          "Website Security Best Practices"
        ]
      },
      {
        "topicName": "Projects for HTML Fundamentals",
        "subtopics": [
          "Personal Portfolio Page",
          "Basic Blog Website",
          "Product Landing Page",
          "Responsive Webpage Layout"
        ]
      },
      {
        "topicName": "Projects for CSS Styling",
        "subtopics": [
          "Stylish Personal Portfolio",
          "Responsive Blog Website",
          "E-commerce Product Page",
          "Interactive Landing Page"
        ]
      },
      {
        "topicName": "Projects for JavaScript Basics",
        "subtopics": [
          "Interactive Image Gallery",
          "Simple To-Do List",
          "Basic Calculator",
          "Dynamic Content Tabs"
        ]
      },
      {
        "topicName": "Projects for Advanced JavaScript",
        "subtopics": [
          "Weather App using API",
          "Movie Search App with AJAX",
          "Dynamic Quiz Application",
          "Interactive Image Slider"
        ]
      },
      {
        "topicName": "Projects for Front-End Frameworks",
        "subtopics": [
          "Single Page Application (SPA)",
          "Interactive Contact Form",
          "E-commerce Product Catalog",
          "Real-Time Chat Application"
        ]
      },
      {
        "topicName": "Projects for Optimizing and Deploying",
        "subtopics": [
          "Performance-Optimized Portfolio Website",
          "Accessible Web Application",
          "Deploying Final Projects",
          "Building a PWA"
        ]
      }
    ]
  },
  {
    "name": "HTML Mastery: Comprehensive Guide to HTML",
    "title": "HTML Mastery: Comprehensive Guide to HTML",
    "description": "Learn HTML from the basics to advanced techniques for building modern web pages.",
    "meta-title": "HTML Mastery | Comprehensive Guide to HTML",
    "meta-description": "Join our comprehensive HTML course and become proficient in building modern web pages.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850186/images/xockg9oohd2zexldmxni.png",
    "slug": "html",
    "categories": [
      "Web Development",
      "HTML"
    ],
    "tags": [
      "HTML",
      "Web Design",
      "Front-end Development"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the fundamental structure of HTML documents",
      "Create well-structured and semantic HTML content",
      "Use HTML tags and attributes effectively",
      "Build responsive web pages using modern HTML techniques",
      "Implement forms and handle user input",
      "Work with multimedia, audio, and video elements",
      "Optimize HTML for accessibility and SEO",
      "Use HTML5 APIs for enhanced web functionality"
    ],
    "course_content": [
      {
        "topicName": "Introduction to HTML",
        "subtopics": [
          "What is HTML?",
          "HTML Versions and History",
          "Setting up an HTML Document",
          "HTML Document Structure",
          "HTML Elements and Tags",
          "HTML Basic Syntax"
        ]
      },
      {
        "topicName": "Text and Semantic Elements",
        "subtopics": [
          "Headings and Paragraphs",
          "Text Formatting Tags (Bold, Italic, Underline)",
          "Semantic Elements (Section, Article, Header, Footer, etc.)",
          "Block vs. Inline Elements",
          "Line Breaks and Horizontal Rules",
          "Preformatted Text (pre tag)"
        ]
      },
      {
        "topicName": "Links and Navigation",
        "subtopics": [
          "Creating Hyperlinks (anchor tag)",
          "Linking to External Websites",
          "Linking to Internal Pages",
          "Linking to Email Addresses",
          "Opening Links in New Windows or Tabs",
          "Creating Anchors for Page Navigation",
          "Working with Bookmark Links"
        ]
      },
      {
        "topicName": "Lists and Tables",
        "subtopics": [
          "Ordered and Unordered Lists (ol, ul, li tags)",
          "Nested Lists",
          "Definition Lists (dl, dt, dd tags)",
          "Creating Tables (table, tr, th, td tags)",
          "Table Headers and Captions",
          "Spanning Columns and Rows",
          "Styling Tables with CSS"
        ]
      },
      {
        "topicName": "Forms and Input Elements",
        "subtopics": [
          "Creating Forms (form tag)",
          "Text Input Fields (input type=\"text\")",
          "Password Fields (input type=\"password\")",
          "Radio Buttons (input type=\"radio\")",
          "Checkboxes (input type=\"checkbox\")",
          "Dropdown Menus (select, option tags)",
          "Textarea (textarea tag)",
          "File Upload (input type=\"file\")",
          "Form Validation and Error Handling"
        ]
      },
      {
        "topicName": "Images and Multimedia",
        "subtopics": [
          "Inserting Images (img tag)",
          "Setting Image Dimensions and Alt Text",
          "Working with Responsive Images",
          "Adding Audio (audio tag)",
          "Adding Video (video tag)",
          "Video Formats and Codecs",
          "Video Controls and Captions"
        ]
      },
      {
        "topicName": "HTML5 Semantic Elements",
        "subtopics": [
          "Main, Section, Article, and Aside",
          "Header, Footer, and Nav",
          "Mark, Time, and Details",
          "Progress and Meter",
          "HTML5 Outline Algorithm",
          "Support and Polyfills for Older Browsers"
        ]
      },
      {
        "topicName": "HTML Forms Advanced Techniques",
        "subtopics": [
          "Customizing Form Styles with CSS",
          "Working with Fieldset and Legend",
          "Form Elements Grouping",
          "Form Validation with JavaScript",
          "Handling Form Submissions",
          "Using Hidden Fields",
          "Autocomplete and Autofocus",
          "Placeholder Text"
        ]
      },
      {
        "topicName": "HTML Multimedia Advanced Techniques",
        "subtopics": [
          "Adding Audio and Video Controls",
          "Video Poster Images",
          "Media Fragments (start, end, time)",
          "Looping and Autoplaying Videos",
          "Audio and Video Preload",
          "Responsive Images with srcset and sizes",
          "Lazy Loading Images"
        ]
      },
      {
        "topicName": "Accessibility and SEO in HTML",
        "subtopics": [
          "Semantic HTML for Accessibility",
          "Using ARIA (Accessible Rich Internet Applications)",
          "Alt Text for Images and Multimedia",
          "Structuring Content for Screen Readers",
          "SEO Best Practices with HTML",
          "Meta Tags (meta, title, description)",
          "Open Graph and Twitter Cards"
        ]
      },
      {
        "topicName": "HTML5 APIs and Advanced Features",
        "subtopics": [
          "Geolocation API",
          "Web Storage (localStorage, sessionStorage)",
          "Application Cache (Offline Web Applications)",
          "Web Workers (Multithreading)",
          "Drag and Drop API",
          "History API (Changing URLs without page refresh)",
          "Canvas API for Graphics",
          "Introduction to Web Components"
        ]
      },
      {
        "topicName": "Projects for HTML Mastery",
        "subtopics": [
          "Personal Portfolio Page",
          "Basic Blog Website",
          "Product Landing Page",
          "Responsive Webpage Layout"
        ]
      }
    ]
  },
  {
    "name": "CSS Mastery: Comprehensive Guide to CSS",
    "title": "CSS Mastery: Comprehensive Guide to CSS",
    "description": "Learn CSS from the basics to advanced techniques for styling modern web pages.",
    "meta-title": "CSS Mastery | Comprehensive Guide to CSS",
    "meta-description": "Join our comprehensive CSS course and become proficient in styling modern web pages.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850187/images/kuody8ih8nzxnfept76o.png",
    "slug": "css",
    "categories": [
      "Web Development",
      "CSS"
    ],
    "tags": [
      "CSS",
      "Web Design",
      "Front-end Development"
    ],
    "learning_outcomes": [
      "Understand CSS syntax and cascading rules",
      "Apply different CSS selectors to target HTML elements",
      "Master box model and positioning techniques",
      "Work with colors, backgrounds, and gradients",
      "Create responsive layouts using Flexbox and Grid",
      "Use CSS transitions and animations for dynamic effects",
      "Implement CSS transforms and 2D/3D animations",
      "Style forms, tables, and multimedia elements",
      "Optimize CSS for performance and maintainability"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "course_content": [
      {
        "topicName": "Introduction to CSS",
        "subtopics": [
          "What is CSS?",
          "CSS Versions and History",
          "CSS Syntax and Selectors",
          "Internal, External, and Inline CSS",
          "CSS Units of Measurement",
          "CSS Box Model Overview"
        ]
      },
      {
        "topicName": "CSS Selectors",
        "subtopics": [
          "Universal Selector (*)",
          "Type Selector (Element Selector)",
          "Class Selector (.)",
          "ID Selector (#)",
          "Descendant Selector (Space)",
          "Child Selector (>)",
          "Adjacent Sibling Selector (+)",
          "Attribute Selector ([])",
          "Pseudo-classes (:)",
          "Pseudo-elements (::)"
        ]
      },
      {
        "topicName": "CSS Box Model",
        "subtopics": [
          "Margin, Border, Padding, Content",
          "Box Model Sizing (box-sizing)",
          "Working with Width and Height",
          "Controlling Overflow",
          "CSS Display Property",
          "Float and Clear",
          "Centering Elements (Horizontal and Vertical)"
        ]
      },
      {
        "topicName": "Styling Text and Fonts",
        "subtopics": [
          "Font Family and Font Stack",
          "Font Size and Font Weight",
          "Text Alignment and Indentation",
          "Text Decoration and Transform",
          "Text Shadow",
          "Google Fonts and Custom Fonts",
          "Styling Links and Buttons",
          "Styling Lists (list-style)"
        ]
      },
      {
        "topicName": "Colors, Backgrounds, and Gradients",
        "subtopics": [
          "Using Colors (Named, RGB, HEX)",
          "Opacity and RGBA",
          "Background Color and Image",
          "Background Repeat and Positioning",
          "Linear and Radial Gradients",
          "Working with CSS Variables (Custom Properties)"
        ]
      },
      {
        "topicName": "CSS Layout Techniques",
        "subtopics": [
          "Normal Flow (Static, Relative, Absolute Positioning)",
          "Float and Clear",
          "CSS Flexbox Layout",
          "Flex Container and Flex Items",
          "Flexbox Alignment and Justification",
          "CSS Grid Layout",
          "Grid Container and Grid Items",
          "Grid Lines, Tracks, and Gaps",
          "Responsive Layouts with Media Queries"
        ]
      },
      {
        "topicName": "CSS Transitions and Animations",
        "subtopics": [
          "CSS Transitions (Transition Property)",
          "Transitions Timing (Duration, Delay, Timing Function)",
          "CSS Animations (Keyframes, Animation Property)",
          "Animation Duration, Delay, and Iteration",
          "CSS Animation Timing Functions",
          "Animating Opacity, Transform, and Colors"
        ]
      },
      {
        "topicName": "CSS Transforms and 2D/3D Animations",
        "subtopics": [
          "CSS Transforms (Translate, Rotate, Scale, Skew)",
          "CSS 2D Transitions and Animations",
          "CSS 3D Transitions and Animations",
          "Working with Perspective",
          "Creating 3D Card Effects",
          "Advanced CSS Animations and Keyframes"
        ]
      },
      {
        "topicName": "Styling Forms, Tables, and Multimedia",
        "subtopics": [
          "Styling Form Elements (Input, Select, Textarea)",
          "Customizing Form Controls",
          "CSS Styling for Tables (Table, tr, th, td)",
          "Table Borders and Spacing",
          "Styling Images and Image Galleries",
          "CSS for Audio and Video Elements"
        ]
      },
      {
        "topicName": "Optimizing CSS",
        "subtopics": [
          "CSS Specificity and Importance",
          "Organizing CSS with Selectors and Comments",
          "Inheritance and Global Styles",
          "CSS Reset and Normalize",
          "CSS Vendor Prefixes",
          "CSS Performance Optimization Techniques",
          "CSS Code Minification and Compression",
          "Using CSS Preprocessors (e.g., Sass, Less)"
        ]
      },
      {
        "topicName": "Projects for CSS Mastery",
        "subtopics": [
          "Stylish Personal Portfolio",
          "Responsive Blog Website",
          "E-commerce Product Page",
          "Interactive Landing Page"
        ]
      }
    ]
  },
  {
    "name": "JavaScript Mastery: Comprehensive Guide to JavaScript",
    "description": "Learn JavaScript from the basics to advanced techniques for building interactive web applications.",
    "meta-title": "JavaScript Mastery | Comprehensive Guide to JavaScript",
    "meta-description": "Join our comprehensive JavaScript course and become proficient in building interactive web applications.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850187/images/enwdonu3ntfbsgpklqht.png",
    "slug": "java-script",
    "categories": [
      "Web Development",
      "JavaScript"
    ],
    "tags": [
      "JavaScript",
      "Front-end Development",
      "Web Programming"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the fundamental concepts of JavaScript",
      "Work with variables, data types, and operators",
      "Use conditional statements and loops for flow control",
      "Master functions, closures, and scope",
      "Manipulate the DOM and handle events",
      "Work with arrays and objects effectively",
      "Asynchronous JavaScript with callbacks and promises",
      "Use modern ES6+ features",
      "Work with JSON data and Fetch API",
      "Build interactive web applications"
    ],
    "course_content": [
      {
        "topicName": "Introduction to JavaScript",
        "subtopics": [
          "What is JavaScript?",
          "JavaScript Versions and History",
          "Setting up JavaScript Environment",
          "JavaScript Syntax and Variables",
          "Data Types and Type Conversion",
          "Comments and Debugging"
        ]
      },
      {
        "topicName": "Control Flow and Loops",
        "subtopics": [
          "Conditional Statements (if, else, switch)",
          "Ternary Operator",
          "Working with Loops (for, while, do...while)",
          "Loop Control Statements (break, continue)"
        ]
      },
      {
        "topicName": "Functions and Scope",
        "subtopics": [
          "Defining Functions and Function Expressions",
          "Function Parameters and Return Values",
          "Function Scopes and Closures",
          "Immediately Invoked Function Expressions (IIFE)",
          "Arrow Functions",
          "Function Context and 'this' Keyword"
        ]
      },
      {
        "topicName": "Manipulating the DOM",
        "subtopics": [
          "Introduction to the Document Object Model (DOM)",
          "Selecting and Modifying DOM Elements",
          "Creating and Removing Elements",
          "Working with Attributes and Properties",
          "Handling Events (click, submit, keypress, etc.)",
          "Event Propagation and Event Delegation",
          "Form Validation and Dynamic UI Updates"
        ]
      },
      {
        "topicName": "Arrays and Objects",
        "subtopics": [
          "Creating and Initializing Arrays",
          "Array Methods (push, pop, shift, unshift, etc.)",
          "Iterating Arrays (forEach, map, filter, reduce)",
          "Working with Objects (Properties and Methods)",
          "Object Constructor and Prototypes",
          "Object Destructuring",
          "JSON Data Manipulation"
        ]
      },
      {
        "topicName": "Asynchronous JavaScript",
        "subtopics": [
          "Understanding Asynchronous Programming",
          "Callbacks and Callback Hell",
          "Promises and Chaining",
          "Async/Await and Error Handling",
          "Working with Timers (setTimeout, setInterval)",
          "Fetching Data with Fetch API",
          "Working with AJAX and XMLHTTPRequests"
        ]
      },
      {
        "topicName": "Modern JavaScript (ES6+)",
        "subtopics": [
          "Let, Const, and Block Scope",
          "Destructuring Assignment",
          "Default Parameters",
          "Spread and Rest Operators",
          "Template Literals",
          "Enhanced Object Literals",
          "Arrow Functions",
          "Classes and Prototypes (OOP in ES6+)",
          "Modules and Imports/Exports",
          "Iterators and Generators",
          "Sets and Maps",
          "Symbol Data Type"
        ]
      },
      {
        "topicName": "Working with APIs and Data",
        "subtopics": [
          "Understanding APIs (Application Programming Interfaces)",
          "Consuming RESTful APIs",
          "Parsing JSON Data",
          "Working with External Libraries",
          "Working with Third-Party APIs",
          "Error Handling in APIs"
        ]
      },
      {
        "topicName": "Interactive Web Applications",
        "subtopics": [
          "Creating Dynamic Content",
          "Building Interactive Forms",
          "Image Sliders and Carousels",
          "Interactive Maps and Geolocation",
          "Real-Time Data Updates with WebSockets",
          "Dynamic Quiz Applications",
          "Building SPA (Single Page Applications)",
          "Browser Storage (localStorage, sessionStorage)"
        ]
      },
      {
        "topicName": "Projects for JavaScript Mastery",
        "subtopics": [
          "Interactive Image Gallery",
          "Simple To-Do List",
          "Basic Calculator",
          "Dynamic Content Tabs",
          "Weather App using API",
          "Movie Search App with AJAX",
          "Dynamic Quiz Application",
          "Interactive Image Slider",
          "Real-Time Chat Application"
        ]
      }
    ]
  },
  {
    "name": "React.js Mastery: Comprehensive Guide to React.js",
    "title": "React.js Mastery: Comprehensive Guide to React.js",
    "description": "Learn React.js from the basics to advanced techniques for building modern web applications.",
    "meta-title": "React.js Mastery | Comprehensive Guide to React.js",
    "meta-description": "Join our comprehensive React.js course and become proficient in building modern web applications.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850185/images/gwz3e2lo0j30se3qqw3v.png",
    "slug": "react-js",
    "categories": [
      "Web Development",
      "React.js"
    ],
    "tags": [
      "React.js",
      "Front-end Development",
      "Web Development"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the fundamentals of React.js and its core concepts",
      "Work with React components and props",
      "Manage state and implement event handling in React",
      "Use React hooks for functional components",
      "Implement React forms and validation",
      "Work with React Router for navigation",
      "Use React Context for state management",
      "Fetch data from APIs and handle asynchronous operations",
      "Create reusable and maintainable React applications",
      "Build single-page applications (SPAs) with React"
    ],
    "course_content": [
      {
        "topicName": "Introduction to React.js",
        "subtopics": [
          "What is React.js?",
          "React.js Versions and History",
          "Setting up React Environment",
          "React Components and JSX",
          "Functional Components vs. Class Components",
          "Props and Prop Types"
        ]
      },
      {
        "topicName": "State and Lifecycle",
        "subtopics": [
          "Understanding State in React",
          "Using Stateful Class Components",
          "Updating State and Re-rendering",
          "Component Lifecycle Methods",
          "Component Mounting and Unmounting",
          "Using shouldComponentUpdate for Optimization",
          "Error Boundaries"
        ]
      },
      {
        "topicName": "React Hooks",
        "subtopics": [
          "Introduction to React Hooks",
          "Using useState Hook",
          "Using useEffect Hook for Side Effects",
          "Using useContext Hook for Global State",
          "Using useReducer Hook for Complex State Logic",
          "Custom Hooks"
        ]
      },
      {
        "topicName": "Handling Events in React",
        "subtopics": [
          "React Event Handling (onClick, onChange, etc.)",
          "Binding Event Handlers",
          "Passing Arguments to Event Handlers",
          "Conditional Rendering",
          "Handling Forms and Form Validation"
        ]
      },
      {
        "topicName": "React Router for Navigation",
        "subtopics": [
          "Introduction to React Router",
          "Setting up Router in React App",
          "Defining Routes and Route Parameters",
          "Navigating with Links and Redirects",
          "Nested Routes and Route Guards",
          "Programmatic Navigation"
        ]
      },
      {
        "topicName": "React Context for State Management",
        "subtopics": [
          "Understanding React Context API",
          "Creating Context and Providing Values",
          "Consuming Context in Components",
          "Context with useReducer for Complex State"
        ]
      },
      {
        "topicName": "Working with APIs and Asynchronous Operations",
        "subtopics": [
          "Fetching Data from APIs with Fetch",
          "Handling Asynchronous Operations with async/await",
          "Using Promises with Axios for HTTP Requests",
          "Working with RESTful APIs",
          "State Management with Redux (optional)"
        ]
      },
      {
        "topicName": "Reusable Components and Best Practices",
        "subtopics": [
          "Creating Reusable Components",
          "Component Composition",
          "Higher-Order Components (HOCs)",
          "Render Props",
          "Code Splitting and Lazy Loading",
          "React Performance Optimization",
          "Debugging React Apps"
        ]
      },
      {
        "topicName": "Building Single-Page Applications (SPAs) with React",
        "subtopics": [
          "Setting up SPA Architecture",
          "Creating Navigation and Routing",
          "Handling Authentication and Protected Routes",
          "State Management for SPAs",
          "Optimizing SPAs for Performance",
          "Deploying React Apps"
        ]
      },
      {
        "topicName": "Projects for React.js Mastery",
        "subtopics": [
          "Personal Portfolio Website",
          "Todo App with React Hooks",
          "E-commerce Product Catalog",
          "Weather App with API Integration",
          "User Authentication and Dashboard",
          "Real-Time Chat Application"
        ]
      }
    ]
  },
  {
    "name": "Node.js Mastery: Comprehensive Guide to Node.js",
    "description": "Learn Node.js from the basics to advanced techniques for building scalable server-side applications.",
    "meta-title": "Node.js Mastery | Comprehensive Guide to Node.js",
    "meta-description": "Join our comprehensive Node.js course and become proficient in building scalable server-side applications.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1690380108/images/frksvknek17ah0hado7s.png",
    "slug": "node-js",
    "categories": [
      "Web Development",
      "Node.js"
    ],
    "tags": [
      "Node.js",
      "Backend Development",
      "Server-side Development"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the fundamentals of Node.js and its architecture",
      "Work with the Node.js runtime environment",
      "Use modules and npm for package management",
      "Create server-side applications with Express.js",
      "Implement RESTful APIs",
      "Work with databases (e.g., MongoDB, MySQL) in Node.js",
      "Authentication and Authorization in Node.js",
      "Asynchronous programming with callbacks, promises, and async/await",
      "File I/O and streams",
      "Deploy and scale Node.js applications"
    ],
    "course_content": [
      {
        "topicName": "Introduction to Node.js",
        "subtopics": [
          "What is Node.js?",
          "Node.js Versions and History",
          "Setting up Node.js Environment",
          "Node.js Architecture and Event Loop",
          "Using the Node.js REPL"
        ]
      },
      {
        "topicName": "Node.js Modules and NPM",
        "subtopics": [
          "Creating and Using Modules",
          "Using npm for Package Management",
          "Installing and Updating Packages",
          "Package.json and Dependency Management",
          "Creating and Publishing npm Packages"
        ]
      },
      {
        "topicName": "Building Web Servers with Express.js",
        "subtopics": [
          "Introduction to Express.js",
          "Creating a Basic Web Server",
          "Routing and Route Handlers",
          "Middleware in Express.js",
          "Working with Query Parameters and Forms",
          "Handling Static Files and Assets",
          "Error Handling in Express.js"
        ]
      },
      {
        "topicName": "Working with RESTful APIs",
        "subtopics": [
          "RESTful API Concepts",
          "Creating RESTful APIs with Express.js",
          "HTTP Methods (GET, POST, PUT, DELETE)",
          "Request and Response Objects",
          "RESTful API Best Practices",
          "Authentication and API Security"
        ]
      },
      {
        "topicName": "Database Integration in Node.js",
        "subtopics": [
          "Working with Relational Databases (MySQL, PostgreSQL)",
          "Working with NoSQL Databases (MongoDB)",
          "Using Database ORM (e.g., Sequelize, Mongoose)",
          "Connecting to Databases and Executing Queries",
          "Modeling Data and Schema Design",
          "Database Transactions and Error Handling"
        ]
      },
      {
        "topicName": "Authentication and Authorization",
        "subtopics": [
          "User Authentication Concepts",
          "Implementing User Authentication with Passport.js",
          "OAuth and Third-Party Authentication",
          "Authorization and Role-Based Access Control",
          "Token-Based Authentication (JWT)",
          "Session-Based Authentication"
        ]
      },
      {
        "topicName": "Asynchronous Programming in Node.js",
        "subtopics": [
          "Understanding Asynchronous Programming",
          "Working with Callbacks",
          "Using Promises for Asynchronous Control Flow",
          "Asynchronous Error Handling",
          "Using async/await for Asynchronous Operations",
          "Working with Events and Event Emitters"
        ]
      },
      {
        "topicName": "File I/O and Streams",
        "subtopics": [
          "Reading and Writing Files in Node.js",
          "Working with Buffers and Streams",
          "Piping Streams",
          "File System Operations",
          "Working with Readable and Writable Streams"
        ]
      },
      {
        "topicName": "Deployment and Scaling",
        "subtopics": [
          "Deploying Node.js Applications",
          "Managing Environment Variables",
          "Using Process Manager (e.g., PM2)",
          "Scaling Node.js Applications",
          "Load Balancing and Reverse Proxy"
        ]
      },
      {
        "topicName": "Projects for Node.js Mastery",
        "subtopics": [
          "RESTful API with Express.js and MongoDB",
          "User Authentication System",
          "Real-Time Chat Application",
          "Task Management System with Database Integration"
        ]
      }
    ]
  },
  {
    "name": "Next.js Mastery: Comprehensive Guide to Next.js",
    "title": "Next.js Mastery: Comprehensive Guide to Next.js",
    "description": "Learn Next.js from the basics to advanced techniques for building modern and server-rendered React applications.",
    "meta-title": "Next.js Mastery | Comprehensive Guide to Next.js",
    "meta-description": "Join our comprehensive Next.js course and become proficient in building modern and server-rendered React applications.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1690380108/images/r7nruoszrim1wkhznbn8.png",
    "slug": "nextjs",
    "categories": [
      "Web Development",
      "Next.js"
    ],
    "tags": [
      "Next.js",
      "React.js",
      "Server-side Rendering",
      "Front-end Development"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the fundamentals of Next.js and its benefits",
      "Build server-rendered React applications with Next.js",
      "Use Next.js Routing and Navigation",
      "Implement Static Site Generation (SSG) with Next.js",
      "Work with Dynamic Server-side Rendering (SSR)",
      "Manage Data Fetching in Next.js",
      "Optimize Next.js applications for performance",
      "Deploy Next.js applications to production"
    ],
    "course_content": [
      {
        "topicName": "Introduction to Next.js",
        "subtopics": [
          "What is Next.js?",
          "Next.js Versions and History",
          "Setting up Next.js Environment",
          "Next.js Project Structure",
          "Pages and Routing in Next.js",
          "Using Link and Navigation Components"
        ]
      },
      {
        "topicName": "Server-side Rendering (SSR)",
        "subtopics": [
          "Understanding Server-side Rendering",
          "Configuring Server-side Rendering in Next.js",
          "Fetching Data on the Server",
          "Using getServerSideProps",
          "Server-side Rendering Best Practices"
        ]
      },
      {
        "topicName": "Static Site Generation (SSG)",
        "subtopics": [
          "Understanding Static Site Generation",
          "Configuring Static Site Generation in Next.js",
          "Using getStaticProps",
          "Revalidating Static Pages",
          "Static Site Generation Best Practices"
        ]
      },
      {
        "topicName": "Dynamic Import and Code Splitting",
        "subtopics": [
          "Dynamic Imports in Next.js",
          "Code Splitting for Performance",
          "Working with Dynamic Components",
          "Prefetching and Lazy Loading",
          "Optimizing Dynamic Imports"
        ]
      },
      {
        "topicName": "Data Fetching in Next.js",
        "subtopics": [
          "Fetching Data in Client-side with useEffect",
          "Working with SWR (Stale-While-Revalidate)",
          "Using API Routes in Next.js",
          "Data Fetching Best Practices"
        ]
      },
      {
        "topicName": "Working with Layouts and Components",
        "subtopics": [
          "Creating Reusable Layout Components",
          "Customizing App Component",
          "Using Head Component for Meta Tags",
          "Creating Global CSS and Styling",
          "Working with CSS Modules in Next.js"
        ]
      },
      {
        "topicName": "Next.js API Routes",
        "subtopics": [
          "Creating Custom API Routes",
          "Handling HTTP Requests and Responses",
          "Securing API Routes",
          "Serverless Functions in Next.js",
          "Mocking API Responses for Development"
        ]
      },
      {
        "topicName": "Next.js and External Libraries",
        "subtopics": [
          "Working with External JavaScript Libraries",
          "Integrating with Redux or Mobx (State Management)",
          "Using Next.js with GraphQL (e.g., Apollo Client)",
          "Next.js and Authentication Libraries"
        ]
      },
      {
        "topicName": "Next.js Optimization and Performance",
        "subtopics": [
          "Analyzing Performance with Next.js Built-in Tools",
          "Optimizing Images and Media",
          "Minification and Code Compression",
          "Next.js and Caching Strategies",
          "Performance Best Practices"
        ]
      },
      {
        "topicName": "Deploying Next.js Applications",
        "subtopics": [
          "Preparing Next.js App for Production",
          "Configuring Next.js for Deployment",
          "Deploying to Vercel, Netlify, or Other Platforms",
          "Continuous Integration and Deployment",
          "Monitoring and Error Tracking"
        ]
      },
      {
        "topicName": "Projects for Next.js Mastery",
        "subtopics": [
          "Personal Portfolio Website with Next.js",
          "E-commerce Product Catalog with SSR and API Routes",
          "Real-Time Chat Application with Dynamic Import",
          "Blog Website with Static Site Generation"
        ]
      }
    ]
  },
  {
    "name": "MERN Stack Mastery: Comprehensive Guide to Full-Stack Web Development",
    "title": "MERN Stack Mastery: Comprehensive Guide to Full-Stack Web Development",
    "description": "Learn the MERN stack to build modern and powerful full-stack web applications.",
    "meta-title": "MERN Stack Mastery | Comprehensive Guide to Full-Stack Web Development",
    "meta-description": "Join our comprehensive MERN stack course and become proficient in building full-stack web applications.",
    "image": "",
    "slug": "mern-stack",
    "categories": [
      "Web Development",
      "Full-Stack Development",
      "MERN Stack"
    ],
    "tags": [
      "MERN Stack",
      "Full-Stack Web Development",
      "MongoDB",
      "Express.js",
      "React.js",
      "Node.js"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning-outcomes": [
      "Understand the architecture and components of the MERN stack",
      "Set up the development environment for MERN applications",
      "Build and interact with MongoDB databases",
      "Create RESTful APIs with Express.js",
      "Develop interactive front-end applications with React.js",
      "Implement user authentication and authorization",
      "Work with JSON Web Tokens (JWT) for secure communication",
      "Use Redux for state management in React applications",
      "Deploy and host MERN applications in production"
    ],
    "topics": [
      {
        "topicName": "Introduction to MERN Stack",
        "subtopics": [
          "What is the MERN Stack?",
          "Advantages and Use Cases of MERN",
          "Setting up Development Environment",
          "Overview of MongoDB, Express.js, React.js, Node.js"
        ]
      },
      {
        "topicName": "MongoDB: NoSQL Database",
        "subtopics": [
          "Introduction to MongoDB",
          "Creating and Managing Databases and Collections",
          "CRUD Operations with MongoDB",
          "Filtering and Sorting Data",
          "Working with Indexes",
          "Aggregation Pipeline",
          "Using MongoDB with Node.js (MongoDB Native Driver)",
          "Mongoose ODM for MongoDB"
        ]
      },
      {
        "topicName": "Express.js: Backend Framework",
        "subtopics": [
          "Introduction to Express.js",
          "Routing and Middleware",
          "Creating RESTful APIs",
          "Handling HTTP Requests and Responses",
          "User Authentication with Express.js",
          "Error Handling and Validation",
          "File Upload and Download",
          "Deploying Express.js Applications"
        ]
      },
      {
        "topicName": "React.js: Front-end Library",
        "subtopics": [
          "Introduction to React.js",
          "React Components and JSX",
          "State and Props in React",
          "Working with Forms and Events",
          "React Router for Navigation",
          "React Hooks for Functional Components",
          "User Authentication with React",
          "Using Redux for State Management",
          "Optimizing React Performance"
        ]
      },
      {
        "topicName": "Node.js: Runtime Environment",
        "subtopics": [
          "Introduction to Node.js",
          "Asynchronous Programming with Node.js",
          "Working with the File System",
          "Creating a Web Server with Node.js",
          "Interacting with Databases (MongoDB) in Node.js",
          "Deploying Node.js Applications",
          "Handling Real-Time Data with WebSockets"
        ]
      },
      {
        "topicName": "User Authentication and Authorization",
        "subtopics": [
          "Introduction to Authentication and Authorization",
          "Using JWT (JSON Web Tokens) for Secure Authentication",
          "Implementing Sign-Up, Sign-In, and Logout Functionality",
          "Password Hashing and Security",
          "Role-Based Access Control",
          "Resetting Passwords and Email Verification"
        ]
      },
      {
        "topicName": "Building a Full MERN Application",
        "subtopics": [
          "Project Setup and Folder Structure",
          "Creating Backend RESTful APIs with Express.js",
          "Connecting MongoDB to the Backend",
          "Building Front-end Components with React.js",
          "Implementing User Authentication and Authorization",
          "Using Redux for State Management",
          "Deploying the Full MERN Application"
        ]
      },
      {
        "topicName": "Advanced Topics",
        "subtopics": [
          "Server-Side Rendering (SSR) with React",
          "Real-Time Data Updates with WebSockets",
          "Implementing Web Push Notifications",
          "Using External APIs and Integration",
          "Performance Optimization for MERN Applications",
          "Securing MERN Applications",
          "Testing MERN Applications"
        ]
      },
      {
        "topicName": "Projects for MERN Stack Mastery",
        "subtopics": [
          "Social Media App with MERN Stack",
          "E-commerce Platform with MERN Stack",
          "Real-Time Chat Application with WebSockets",
          "Task Management System with User Authentication",
          "Personal Blog with SSR and External APIs"
        ]
      }
    ]
  },
  {
    "name": "MEAN Stack Mastery: Comprehensive Guide to Full-Stack Web Development",
    "description": "Learn the MEAN stack to build modern and powerful full-stack web applications.",
    "meta-title": "MEAN Stack Mastery | Comprehensive Guide to Full-Stack Web Development",
    "meta-description": "Join our comprehensive MEAN stack course and become proficient in building full-stack web applications.",
    "image": "",
    "slug": "mean-stack",
    "categories": [
      "Web Development",
      "Full-Stack Development",
      "MEAN Stack"
    ],
    "tags": [
      "MEAN Stack",
      "Full-Stack Web Development",
      "MongoDB",
      "Express.js",
      "Angular",
      "Node.js"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the architecture and components of the MEAN stack",
      "Set up the development environment for MEAN applications",
      "Build and interact with MongoDB databases",
      "Create RESTful APIs with Express.js",
      "Develop interactive front-end applications with Angular",
      "Implement user authentication and authorization",
      "Work with JSON Web Tokens (JWT) for secure communication",
      "Use Angular services and reactive programming",
      "Deploy and host MEAN applications in production"
    ],
    "course_content": [
      {
        "topicName": "Introduction to MEAN Stack",
        "subtopics": [
          "What is the MEAN Stack?",
          "Advantages and Use Cases of MEAN",
          "Setting up Development Environment",
          "Overview of MongoDB, Express.js, Angular, Node.js"
        ]
      },
      {
        "topicName": "MongoDB: NoSQL Database",
        "subtopics": [
          "Introduction to MongoDB",
          "Creating and Managing Databases and Collections",
          "CRUD Operations with MongoDB",
          "Filtering and Sorting Data",
          "Working with Indexes",
          "Aggregation Pipeline",
          "Using MongoDB with Node.js (MongoDB Native Driver)",
          "Mongoose ODM for MongoDB"
        ]
      },
      {
        "topicName": "Express.js: Backend Framework",
        "subtopics": [
          "Introduction to Express.js",
          "Routing and Middleware",
          "Creating RESTful APIs",
          "Handling HTTP Requests and Responses",
          "User Authentication with Express.js",
          "Error Handling and Validation",
          "File Upload and Download",
          "Deploying Express.js Applications"
        ]
      },
      {
        "topicName": "Angular: Front-end Framework",
        "subtopics": [
          "Introduction to Angular",
          "Angular Components and Templates",
          "Data Binding and Event Handling",
          "Angular Directives and Pipes",
          "Services and Dependency Injection",
          "Routing and Navigation",
          "User Authentication with Angular",
          "Reactive Forms and Validation",
          "Angular HTTP Client for Data Interaction"
        ]
      },
      {
        "topicName": "Node.js: Runtime Environment",
        "subtopics": [
          "Introduction to Node.js",
          "Asynchronous Programming with Node.js",
          "Working with the File System",
          "Creating a Web Server with Node.js",
          "Interacting with Databases (MongoDB) in Node.js",
          "Deploying Node.js Applications",
          "Handling Real-Time Data with WebSockets"
        ]
      },
      {
        "topicName": "User Authentication and Authorization",
        "subtopics": [
          "Introduction to Authentication and Authorization",
          "Using JWT (JSON Web Tokens) for Secure Authentication",
          "Implementing Sign-Up, Sign-In, and Logout Functionality",
          "Password Hashing and Security",
          "Role-Based Access Control",
          "Resetting Passwords and Email Verification"
        ]
      },
      {
        "topicName": "Building a Full MEAN Application",
        "subtopics": [
          "Project Setup and Folder Structure",
          "Creating Backend RESTful APIs with Express.js",
          "Connecting MongoDB to the Backend",
          "Building Front-end Components with Angular",
          "Implementing User Authentication and Authorization",
          "Deploying the Full MEAN Application"
        ]
      },
      {
        "topicName": "Advanced Topics",
        "subtopics": [
          "Server-Side Rendering (SSR) with Angular",
          "Real-Time Data Updates with WebSockets",
          "Implementing Web Push Notifications",
          "Using External APIs and Integration",
          "Performance Optimization for MEAN Applications",
          "Securing MEAN Applications",
          "Testing MEAN Applications"
        ]
      },
      {
        "topicName": "Projects for MEAN Stack Mastery",
        "subtopics": [
          "Social Media App with MEAN Stack",
          "E-commerce Platform with MEAN Stack",
          "Real-Time Chat Application with WebSockets",
          "Task Management System with User Authentication",
          "Personal Blog with SSR and External APIs"
        ]
      }
    ]
  },
  {
    "name": "Flask Mastery: Comprehensive Guide to Web Development with Flask",
    "title": "Flask Mastery: Comprehensive Guide to Web Development with Flask",
    "description": "Learn Flask from the basics to advanced techniques for building web applications.",
    "meta-title": "Flask Mastery | Comprehensive Guide to Web Development with Flask",
    "meta-description": "Join our comprehensive Flask course and become proficient in building web applications.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850185/images/hgbhy2vc4h2t0e4zrmdh.png",
    "slug": "flask",
    "categories": [
      "Web Development",
      "Flask"
    ],
    "tags": [
      "Flask",
      "Python",
      "Web Development"
    ],
    "learning_outcomes": [
      "Understand the fundamentals of Flask and its architecture",
      "Set up a development environment for Flask applications",
      "Build routes and handle requests with Flask",
      "Work with templates and forms in Flask",
      "Implement user authentication and authorization",
      "Use databases with Flask (SQLAlchemy)",
      "Create RESTful APIs with Flask",
      "Implement file uploads and downloads",
      "Deploy Flask applications to production"
    ],
    "course_content": [
      {
        "topicName": "Introduction to Flask",
        "subtopics": [
          "What is Flask?",
          "Flask Application Structure",
          "Setting up a Virtual Environment",
          "Installing Flask",
          "Your First Flask Application",
          "Working with Routes and Views"
        ]
      },
      {
        "topicName": "Templates and Forms",
        "subtopics": [
          "Jinja2 Templating Engine",
          "Creating and Rendering Templates",
          "Working with Template Inheritance",
          "Handling Forms in Flask",
          "Form Validation and CSRF Protection",
          "Flask-WTF for Form Management"
        ]
      },
      {
        "topicName": "Database Integration (SQLAlchemy)",
        "subtopics": [
          "Introduction to Databases in Flask",
          "Setting up a Database (SQLite, PostgreSQL, or MySQL)",
          "Defining Models with SQLAlchemy",
          "Creating, Reading, Updating, and Deleting Data",
          "Querying with SQLAlchemy",
          "Database Migrations with Flask-Migrate"
        ]
      },
      {
        "topicName": "User Authentication and Authorization",
        "subtopics": [
          "User Registration and Login Functionality",
          "Password Hashing and Security",
          "User Sessions and Cookies",
          "Role-Based Access Control (RBAC)",
          "Implementing Logout and User Authentication Middleware"
        ]
      },
      {
        "topicName": "RESTful APIs with Flask",
        "subtopics": [
          "Introduction to RESTful APIs",
          "Designing RESTful APIs with Flask",
          "HTTP Methods and Status Codes",
          "Serializing and Deserializing Data (JSON)",
          "Authentication and Authorization for APIs",
          "API Versioning and Best Practices"
        ]
      },
      {
        "topicName": "File Uploads and Downloads",
        "subtopics": [
          "Uploading Files with Flask",
          "Handling File Uploads and File Storage",
          "Serving Static Files",
          "Downloading Files in Flask",
          "File and Image Processing"
        ]
      },
      {
        "topicName": "Error Handling and Logging",
        "subtopics": [
          "Handling Errors and Exceptions",
          "Custom Error Pages",
          "Logging in Flask",
          "Debugging Techniques",
          "Application Configuration"
        ]
      },
      {
        "topicName": "Deploying Flask Applications",
        "subtopics": [
          "Setting up Production Server (e.g., Gunicorn, uWSGI)",
          "Using NGINX as a Reverse Proxy",
          "Environment Configuration (Development vs. Production)",
          "Managing Application Deployment",
          "Continuous Integration and Continuous Deployment (CI/CD)"
        ]
      },
      {
        "topicName": "Projects for Flask Mastery",
        "subtopics": [
          "Personal Blog with User Authentication",
          "RESTful API for a Todo List Application",
          "Image Gallery with File Uploads",
          "E-commerce Platform with Database Integration",
          "Real-Time Chat Application with Flask-SocketIO"
        ]
      }
    ]
  },
  {
    "name": "Complete Java - Full Stack Development",
    "title": "Complete Java - Full Stack Development",
    "description": "Learn Java programming and build full-stack applications with Spring, Spring Boot, and microservices.",
    "meta_title": "Complete Java Course - Full Stack Development",
    "meta_description": "Master Java programming, Spring, Spring Boot, and microservices. Build full-stack applications with hands-on projects.",
    "image": "https://res.cloudinary.com/df8aswwta/image/upload/v1689850187/images/u4jzfmfxakcgliqoca0m.png",
    "slug": "complete-java-full-stack-development",
    "categories": [
      "Programming",
      "Web Development",
      "Java"
    ],
    "tags": [
      "Java",
      "Full Stack",
      "Spring",
      "Spring Boot",
      "Microservices",
      "Web Development"
    ],
    "learning_outcomes": [
      "Develop a solid understanding of the Java programming language and its key features.",
      "Apply object-oriented programming (OOP) principles to design and build Java applications.",
      "Utilize SQL and NoSQL databases (MongoDB) to perform CRUD operations and interact with data.",
      "Create web APIs and RESTful services using Spring Framework and Spring Boot.",
      "Implement and manage a microservices architecture for scalable and maintainable applications.",
      "Secure web applications and microservices using Spring Security.",
      "Apply caching techniques to optimize application performance.",
      "Build full-stack applications, including front-end and back-end components, using Java and related frameworks.",
      "Gain hands-on experience by working on real-world projects at each level of the course."
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "course_content": [
      {
        "level": "beginner",
        "data": [
          {
            "topicName": "introduction to Java",
            "subtopics": [
              "History and features of Java",
              "Setting up the development environment"
            ]
          },
          {
            "topicName": "Java Basics",
            "subtopics": [
              "Variables, data types, and operators",
              "Control statements (if, else, loops)"
            ]
          },
          {
            "topicName": "Object-Oriented Programming (OOP) Fundamentals",
            "subtopics": [
              "Classes and objects",
              "Constructors and methods",
              "Inheritance and polymorphism"
            ]
          },
          {
            "topicName": "Working with SQL",
            "subtopics": [
              "Introduction to relational databases",
              "SQL queries for CRUD operations",
              "Connecting Java applications to SQL databases"
            ]
          },
          {
            "topicName": "Introduction to MongoDB",
            "subtopics": [
              "NoSQL databases and MongoDB basics",
              "CRUD operations with MongoDB in Java"
            ]
          },
          {
            "topicName": "Arrays and Strings",
            "subtopics": [
              "Declaring and using arrays",
              "String manipulation"
            ]
          },
          {
            "topicName": "Exception Handling",
            "subtopics": [
              "Handling errors and exceptions",
              "Using try-catch blocks"
            ]
          },
          {
            "topicName": "Console Application Projects",
            "subtopics": [
              "Project 1: Simple Calculator",
              "Project 2: To-Do List Manager",
              "Project 3: Basic Library Management System"
            ]
          }
        ],
        "learning_outcomes": [
          "Understand fundamental Java concepts and syntax.",
          "Build simple console applications using Java.",
          "Perform basic database operations with SQL and MongoDB.",
          "Create object-oriented Java programs.",
          "Handle exceptions in Java applications.",
          "Develop foundational skills for full-stack Java development."
        ],
        "no_of_classes": 30,
        "no_of_months": "2",
        "certificationName": "Beginer Java Certification",
        "pricing": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      },
      {
        "level": "intermediate",
        "data": [
          {
            "topicName": "Advanced OOP Concepts",
            "subtopics": [
              "Interfaces and abstract classes",
              "Packages and access control",
              "Exception hierarchy and custom exceptions"
            ]
          },
          {
            "topicName": "Java Collections Framework",
            "subtopics": [
              "Lists, Sets, and Maps",
              "Iterators and foreach loop"
            ]
          },
          {
            "topicName": "Generics",
            "subtopics": [
              "Creating and using generic classes and methods"
            ]
          },
          {
            "topicName": "File Handling",
            "subtopics": [
              "Reading and writing to files",
              "Working with streams"
            ]
          },
          {
            "topicName": "Introduction to Spring Framework",
            "subtopics": [
              "Dependency Injection and IoC",
              "Aspect-Oriented Programming (AOP)"
            ]
          },
          {
            "topicName": "Java Persistence API (JPA)",
            "subtopics": [
              "Entity classes and annotations",
              "EntityManager and CRUD operations"
            ]
          },
          {
            "topicName": "Spring Boot Development",
            "subtopics": [
              "Building RESTful APIs with Spring Boot",
              "Introduction to Spring Data JPA"
            ]
          },
          {
            "topicName": "Intermediate Projects",
            "subtopics": [
              "Project 1: Online Bookstore API using Spring Boot and JPA",
              "Project 2: Basic Employee Management System with CRUD operations",
              "Project 3: RESTful Blog API with MongoDB as the backend"
            ]
          }
        ],
        "learning_outcomes": [
          "Advance Java skills with topics like generics and collections.",
          "Create web APIs using Spring Framework and Spring Boot.",
          "Implement database interactions with Java Persistence API (JPA).",
          "Build intermediate-level full-stack applications.",
          "Apply security measures to RESTful APIs.",
          "Develop real-world projects using Spring and JPA."
        ],
        "no_of_classes": 30,
        "no_of_months": "2",
        "certificationName": "Intermediate Java Certification",
        "pricing": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      },
      {
        "level": "advance",
        "data": [
          {
            "topicName": "Spring MVC",
            "subtopics": [
              "Controller, Service, and Repository layers",
              "View templates and Thymeleaf"
            ]
          },
          {
            "topicName": "Spring Security",
            "subtopics": [
              "Authentication and authorization",
              "Securing RESTful APIs"
            ]
          },
          {
            "topicName": "Microservices Architecture",
            "subtopics": [
              "Introduction to microservices and their benefits",
              "Communication between microservices"
            ]
          },
          {
            "topicName": "Spring Cloud",
            "subtopics": [
              "Service discovery with Eureka",
              "Load balancing with Ribbon",
              "API Gateway with Zuul"
            ]
          },
          {
            "topicName": "Caching in Java",
            "subtopics": [
              "Introduction to caching and caching frameworks",
              "Implementing caching in Spring applications"
            ]
          },
          {
            "topicName": "Advanced Projects",
            "subtopics": [
              "Project 1: Microservices-based E-commerce platform",
              "Project 2: Secure RESTful API for a Social Media Network",
              "Project 3: Implementing caching in a Spring-based application"
            ]
          }
        ],
        "learning_outcomes": [
          "Master Spring MVC for building robust web applications.",
          "Design and implement microservices architecture.",
          "Secure microservices and RESTful APIs using Spring Security.",
          "Apply caching strategies to optimize application performance.",
          "Build advanced full-stack projects using microservices.",
          "Optimize application performance and scalability."
        ],
        "no_of_classes": 30,
        "no_of_months": "2",
        "certificationName": "Advance Java Certification",
        "pricing": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ]
  },
  {
    "name": "Python Full Stack Mastery: Comprehensive Guide to Full-Stack Web Development with Python",
    "title": "Python Full Stack Mastery: Comprehensive Guide to Full-Stack Web Development with Python",
    "description": "Learn the Python Full Stack from the basics to advanced techniques for building modern web applications.",
    "meta-title": "Python Full Stack Mastery | Comprehensive Guide to Full-Stack Web Development with Python",
    "meta-description": "Join our comprehensive Python Full Stack course and become proficient in building modern web applications.",
    "image": "",
    "slug": "python-full-stack",
    "categories": [
      "Web Development",
      "Full-Stack Development",
      "Python"
    ],
    "tags": [
      "Python Full Stack",
      "Web Development",
      "Django",
      "Flask",
      "Front-end Development",
      "Back-end Development"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the architecture and components of the Python Full Stack",
      "Set up the development environment for Full-Stack web applications",
      "Build and interact with databases (SQL and NoSQL)",
      "Create RESTful APIs for communication",
      "Develop interactive front-end applications with HTML, CSS, and JavaScript",
      "Implement user authentication and authorization",
      "Use Django and Flask for back-end development",
      "Deploy and host Full-Stack web applications in production"
    ],
    "course_content": [
      {
        "topicName": "Introduction to Full-Stack Web Development",
        "subtopics": [
          "Understanding Full-Stack Development",
          "Front-End vs. Back-End vs. Full-Stack",
          "Setting up a Development Environment",
          "Overview of Python Full Stack Technologies"
        ]
      },
      {
        "topicName": "HTML and CSS Basics",
        "subtopics": [
          "Introduction to HTML5",
          "HTML Elements and Tags",
          "CSS Fundamentals",
          "CSS Selectors and Styling",
          "CSS Layout and Flexbox",
          "Responsive Web Design"
        ]
      },
      {
        "topicName": "JavaScript for Front-End Development",
        "subtopics": [
          "Introduction to JavaScript",
          "Working with Variables and Data Types",
          "JavaScript Functions and Objects",
          "DOM Manipulation",
          "Event Handling",
          "Asynchronous JavaScript and AJAX",
          "ES6+ Features"
        ]
      },
      {
        "topicName": "Database Design and SQL",
        "subtopics": [
          "Understanding Database Concepts",
          "Relational Database Design",
          "SQL Basics (CRUD Operations)",
          "Joins and Subqueries",
          "Database Normalization",
          "Working with MySQL or PostgreSQL"
        ]
      },
      {
        "topicName": "NoSQL Databases and MongoDB",
        "subtopics": [
          "Introduction to NoSQL Databases",
          "MongoDB Basics and Installation",
          "Data Modeling with MongoDB",
          "CRUD Operations with MongoDB",
          "Querying and Indexing",
          "Working with PyMongo (Python Driver)"
        ]
      },
      {
        "topicName": "Building RESTful APIs with Flask",
        "subtopics": [
          "Introduction to RESTful APIs",
          "Setting up Flask for API Development",
          "Implementing Endpoints for CRUD Operations",
          "Request and Response Handling",
          "API Authentication and Security",
          "Versioning and Pagination"
        ]
      },
      {
        "topicName": "Back-End Development with Django",
        "subtopics": [
          "Introduction to Django",
          "Setting up Django Projects and Apps",
          "Django Models and Migrations",
          "Django Admin Panel",
          "Views and Templates in Django",
          "User Authentication and Authorization",
          "Django Forms and Validation"
        ]
      },
      {
        "topicName": "Front-End and Back-End Integration",
        "subtopics": [
          "Integrating Front-End (HTML, CSS, JS) with Back-End (Django, Flask)",
          "Working with AJAX in Django/Flask Applications",
          "Consuming APIs in Front-End Applications",
          "Handling Authentication and Authorization in Front-End"
        ]
      },
      {
        "topicName": "User Authentication and Authorization",
        "subtopics": [
          "User Registration and Login Functionality",
          "Password Hashing and Security",
          "User Sessions and Tokens",
          "Role-Based Access Control (RBAC)",
          "OAuth and Third-Party Authentication",
          "Implementing Logout and User Authentication Middleware"
        ]
      },
      {
        "topicName": "Deploying Full-Stack Applications",
        "subtopics": [
          "Configuring Production Servers (e.g., Nginx, Apache, Gunicorn)",
          "Managing Environment Configuration",
          "Using Docker for Containerization",
          "Continuous Integration and Continuous Deployment (CI/CD)",
          "Application Monitoring and Error Tracking"
        ]
      },
      {
        "topicName": "Projects for Python Full Stack Mastery",
        "subtopics": [
          "Personal Portfolio Website with HTML, CSS, and JavaScript",
          "Blog Application with Django Back-End and Front-End",
          "E-commerce Platform with Django, PostgreSQL, and JavaScript",
          "Social Media App with Flask API and React Front-End",
          "Real-Time Chat Application with WebSockets"
        ]
      }
    ]
  },
  {
    "name": "Full Stack Web Development Mastery: Comprehensive Guide to Building Modern Web Applications",
    "title": "Full Stack Web Development Mastery: Comprehensive Guide to Building Modern Web Applications",
    "description": "Learn Full Stack Web Development from the basics to advanced techniques for building modern web applications.",
    "meta-title": "Full Stack Web Development Mastery | Comprehensive Guide to Building Modern Web Applications",
    "meta-description": "Join our comprehensive Full Stack Web Development course and become proficient in building modern web applications.",
    "image": "",
    "slug": "full-stack-web-development",
    "categories": [
      "Web Development",
      "Full-Stack Development"
    ],
    "tags": [
      "Full Stack",
      "Web Development",
      "Front-end Development",
      "Back-end Development",
      "Databases",
      "JavaScript",
      "HTML",
      "CSS"
    ],
    "pricing": [
      {
        "beginner": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "intermediate": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        },
        "advance": {
          "one_one": {
            "rupees": 30000,
            "dollars": 365
          },
          "group": {
            "rupees": 30000,
            "dollars": 365
          }
        }
      }
    ],
    "levels": [
      null
    ],
    "learning_outcomes": [
      "Understand the architecture and components of Full Stack Web Development",
      "Set up a development environment for web applications",
      "Create responsive and interactive front-end applications with HTML, CSS, and JavaScript",
      "Implement user authentication and authorization",
      "Work with databases (SQL and NoSQL)",
      "Build RESTful APIs for communication",
      "Develop back-end applications with popular frameworks",
      "Deploy and host modern web applications in production"
    ],
    "course_content": [
      {
        "topicName": "Introduction to Full Stack Web Development",
        "subtopics": [
          "Understanding Full Stack Web Development",
          "Front-End vs. Back-End vs. Full Stack",
          "Setting up a Development Environment",
          "Overview of Front-End and Back-End Technologies"
        ]
      },
      {
        "topicName": "HTML and CSS Basics",
        "subtopics": [
          "Introduction to HTML5",
          "HTML Elements and Tags",
          "CSS Fundamentals",
          "CSS Selectors and Styling",
          "CSS Layout and Flexbox",
          "Responsive Web Design"
        ]
      },
      {
        "topicName": "JavaScript for Front-End Development",
        "subtopics": [
          "Introduction to JavaScript",
          "Working with Variables and Data Types",
          "JavaScript Functions and Objects",
          "DOM Manipulation",
          "Event Handling",
          "Asynchronous JavaScript and AJAX",
          "ES6+ Features"
        ]
      },
      {
        "topicName": "User Authentication and Authorization",
        "subtopics": [
          "User Registration and Login Functionality",
          "Password Hashing and Security",
          "User Sessions and Cookies",
          "Role-Based Access Control (RBAC)",
          "OAuth and Third-Party Authentication",
          "Implementing Logout and User Authentication Middleware"
        ]
      },
      {
        "topicName": "Database Design and SQL",
        "subtopics": [
          "Understanding Database Concepts",
          "Relational Database Design",
          "SQL Basics (CRUD Operations)",
          "Joins and Subqueries",
          "Database Normalization",
          "Working with MySQL or PostgreSQL"
        ]
      },
      {
        "topicName": "NoSQL Databases and MongoDB",
        "subtopics": [
          "Introduction to NoSQL Databases",
          "MongoDB Basics and Installation",
          "Data Modeling with MongoDB",
          "CRUD Operations with MongoDB",
          "Querying and Indexing",
          "Working with PyMongo (Python Driver)"
        ]
      },
      {
        "topicName": "Building RESTful APIs",
        "subtopics": [
          "Introduction to RESTful APIs",
          "Designing RESTful APIs",
          "HTTP Methods and Status Codes",
          "Serializing and Deserializing Data (JSON)",
          "Authentication and Authorization for APIs",
          "API Versioning and Best Practices"
        ]
      },
      {
        "topicName": "Back-End Development",
        "subtopics": [
          "Choosing a Back-End Framework (e.g., Django, Flask, Express.js)",
          "Setting up Back-End Project",
          "Creating Routes and Handling Requests",
          "Connecting to Databases (SQL and NoSQL)",
          "User Authentication and Authorization",
          "Implementing Middleware and Error Handling"
        ]
      },
      {
        "topicName": "Front-End and Back-End Integration",
        "subtopics": [
          "Integrating Front-End (HTML, CSS, JS) with Back-End (Frameworks)",
          "Working with AJAX in Web Applications",
          "Consuming APIs in Front-End Applications",
          "Handling Authentication and Authorization in Front-End"
        ]
      },
      {
        "topicName": "Deploying Modern Web Applications",
        "subtopics": [
          "Configuring Production Servers (e.g., Nginx, Apache, Gunicorn)",
          "Managing Environment Configuration",
          "Using Docker for Containerization",
          "Continuous Integration and Continuous Deployment (CI/CD)",
          "Application Monitoring and Error Tracking"
        ]
      },
      {
        "topicName": "Projects for Full Stack Web Development Mastery",
        "subtopics": [
          "Personal Portfolio Website with HTML, CSS, and JavaScript",
          "Blog Application with Back-End and Front-End Integration",
          "E-commerce Platform with Database Integration",
          "Social Media App with RESTful APIs",
          "Real-Time Chat Application with WebSockets"
        ]
      }
    ]
  }
]